{"version":3,"sources":["components/Txtform.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Txtform","props","useState","text","setText","className","heading","style","backgroundcolor","mode","onChange","event","console","log","target","value","id","rows","onClick","newtext","toUpperCase","showAlert","newtext1","toLowerCase","document","title","newtext2","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newtext3","split","join","color","length","Navbar","href","type","fun","toggleMode","htmlfor","Alert","alert","Success","role","msg","prototype","PropTypes","string","isRequired","App","setMode","setAlert","message","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a3554f45.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react'\r\n\r\nexport default function Txtform(props) \r\n{\r\n    const [text , setText] = useState('Enter text here');\r\n    const handleupClick=()=>{\r\n        console.log(\"uppercase was clicked\" +text)\r\n        \r\n        let newtext=text.toUpperCase();\r\n        setText(newtext)\r\n\r\n    props.showAlert(\"you changed word in uppercase\",\"success\")\r\n    };\r\n        const handleonChange=(event)=>{\r\n            console.log(\"changed in text clicked\")\r\n           setText( event.target.value)\r\n\r\n        }\r\n\r\n \r\n        const handleloClick=()=>{\r\n            console.log(\"lowercase was clicked\" +text)\r\n            \r\n            let newtext1=text.toLowerCase();\r\n            setText(newtext1);\r\n            props.showAlert(\"you changed word in lowercase\",\"success\")\r\ndocument.title=\"textutils-Lowercase change\"\r\n        } \r\n\r\n        const handletoCopy=()=>{\r\n            console.log(\"remove space is clicked\")\r\n           let newtext2=document.getElementById(\"mybox\");\r\n            newtext2.select();\r\n            newtext2.setSelectionRange(0,99999);\r\n            navigator.clipboard.writeText(newtext2.value) \r\n        }\r\nconst handleExtraSpaces=()=>\r\n{\r\n    let newtext3=text.split(/[  ]+/);\r\n    setText(newtext3.join(\" \"))\r\n\r\n}\r\n\r\n\r\n\r\n\r\n        // Declare a new state variable, which we'll call \"text\"\r\n \r\n \r\n    // //wrong way change the state\r\n    // text=\"new text\"\r\n\r\n    //correct way to change the state\r\n    // setText(\"new Text\");\r\n\r\n    return (\r\n        <>\r\n        <div className={`\"container\" style={{color:props.mode==='dark'?'white':'rgb(195 179 179)'}}`}>\r\n <h1>{props.heading}</h1>\r\n<div className=\"mb-3\" my-2>\r\n    <textarea className=\"form-control\" style={{backgroundcolor:props.mode==='light'?'rgb(195 179 179)':'light'}} onChange={handleonChange} value= {text} id=\"mybox\" rows=\"8\"></textarea>\r\n<button className=\"btn-primary  my-2 \"onClick={handleupClick}   >Convert to upper case</button>\r\n<button className=\"btn-primary my-2 mx-3\" onClick={handleloClick}   >Convert to lower  case</button>\r\n<button className=\"btn-primary my-2 mx-3\" onClick={handletoCopy}   >copy</button>\r\n<button className=\"btn-primary my-2 mx-3\" onClick={handleExtraSpaces} >remove extra spaces  </button>\r\n\r\n\r\n\r\n</div>\r\n            \r\n        </div>\r\n\r\n        <div className=\"container\" style={{color:props.mode==='dark'?\"white\":\"black\"}}>\r\n\r\n            <h1>your text summary</h1>\r\n            <p>{text.split(\" \").length} word,{text.length} character</p>\r\n            <p>{0.008*text.split(\" \").length} Minute read</p>\r\n            <h2>preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in textarea\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n ","\r\nimport PropTypes from 'prop-types'\r\n\r\nimport React from 'react'\r\n// { import { Link } from 'react-router-dom'}\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n        \r\n    <nav className={`navbar navbar-expand-lg navbar-${props .mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">HOME</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.fun}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">Pricing</a>\r\n        </li>\r\n      </ul>\r\n      <span className=\"navbar-text\">\r\n        Navbar text with an inline element\r\n      </span>\r\n    </div>\r\n  </div>\r\n  \r\n\r\n  <div className={`form-check form-switch text-${props.mode==='light'?\"dark\":\"light\"}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Light Mode</label>\r\n</div>\r\n</nav>\r\n\r\n \r\n\r\n    )\r\n}\r\n\r\nNavbar.prototype={title:PropTypes.string.isRequired ,   fun:PropTypes.string}\r\n\r\n// Navbar.defaultProps ={\r\n//     title:\"mera syam\"\r\n// }","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n    // const capatilized=(word)=>{\r\n    //     const lower=word.toLowereCase()\r\n    //     return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n    // }\r\n    \r\n    \r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.Success} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n  \r\n\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Txtform from './components/Txtform';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport { useState } from 'react/cjs/react.development';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode ,setMode]=useState('dark') //wheather dark mode is enable or not\nconst [alert,setAlert]=useState(\"null\");\nconst showAlert=(message,type)=>{\n  setAlert({\n    msg:message,\n    type:type \n})\n// setTimeout(()=>{\n// setAlert=(\"null\")\n// },3000)\n}\n\n\n\n\n  const toggleMode=()=>{\n\n    if (mode==='light')\n  {  setMode('dark')\n  document.body.style.backgroundColor=\"rgb(25 79 132)\"\nshowAlert(\"dark mode has enable\",\"success\")\n}\nelse\n{\nsetMode('light')\ndocument.body.style.backgroundColor=\"#f8f9fa\"\nshowAlert(\"light mode has enable\",\"success\")\n} \n} \n  \n  return (\n    \n    <>\n\n    {/* <Router> */}\n<Navbar title=\"textutils\" fun=\"About\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n\n{/*   */}\n<div className=\"container\" my-3>\n\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n            \n<Txtform showAlert={showAlert} heading=\"Enter the text to analyize\"/>\n\n          {/* </Route>\n        </Switch> */}\n\n  {/* <About my-3/> */}\n</div>\n{/* </Router> */}\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}